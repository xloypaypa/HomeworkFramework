@startuml

abstract class AbstractSteep {
	# eventCallBack:NormalEvent

	+ boolean action()
	+ void setEventCallBack(NormalEvent eventCallBack)
	+ NormalEvent getEventCallBack()
	# {abstract} boolean checkNeedData()
	# {abstract} boolean steep()
	# {abstract} void putData()
	# {abstract} String getNextSteep()
}

abstract class AbstractAction extends AbstractSteep {
    # boolean steep()
    # {abstract} void run()
}

class NormalEvent {
	# steeps:Vector<AbstractSteep>
	# values:Map<String, Object>
	__
	--event operation--
	+ NormalEvent()
	+ void addSteep(AbstractSteep steep)
	+ void addSteep(String steepName, AbstractSteep steep)
	+ void cleanSteep()
	+ boolean runEvent()
	--event data--
	+ void putValue(String key, Object value)
	+ Object getValue(String key)
	+ Class getValueClass(String key)
	+ boolean containsKey(String key)
	+ void cleanValues()
}

class ValueChecker {
    # eventCallBack:NormalEvent
    # checkItems:Vector<Pair<String, Class>>

    + ValueChecker()
    + void setEventCallBack(NormalEvent eventCallBack)
    + NormalEvent getEventCallBack()
    + void addItem(Pair<String, Class> item)
    + void cleanItem()
    + boolean checkAllItem()
}

package action {
	abstract class AddItemAction extends AbstractAction {
		- db:String
		- item:IOType

		# void run()
		# boolean checkNeedData()
		# void putData()
	}

	abstract class RemoveIDAction extends AbstractAction {
		- db:String
		- id:String

		# void run()
		# boolean checkNeedData()
		# void putData()
	}

	abstract class RemoveItemAction extends AbstractAction {
		- db:String
		- item:IOType

		# void run()
		# boolean checkNeedData()
		# void putData()
	}

	abstract class UpdateIDAction extends AbstractAction {
		- db:String
		-id:String
		- item:IOType

		# void run()
		# boolean checkNeedData()
		# void putData()
	}

	abstract class UpdateItemAction extends AbstractAction {
		- db:String
		- past:IOType
		- item:IOType

		# void run()
		# boolean checkNeedData()
		# void putData()
	}
}

abstract class DataFormatSteep extends AbstractSteep {
    # String key;
    # Format format;
    - String value;
    - Object ans;

    + void setFormat(String key, Format format)
    # boolean checkNeedData()
    # boolean steep()
    # void putData()
}

NormalEvent <--* AbstractSteep
action <--o ValueChecker
ValueChecker <--o NormalEvent
AbstractSteep <--o NormalEvent

@enduml